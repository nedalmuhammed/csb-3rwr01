{"version":3,"sources":["App.js","index.js"],"names":["App","useState","todo","setTodo","mutation","useMutation","fetch","method","headers","body","JSON","stringify","userId","title","completed","then","res","json","onSuccess","data","console","log","onError","error","onSettled","e","a","preventDefault","mutateAsync","className","onSubmit","type","value","onChange","target","isLoading","isSuccess","isError","rootElement","document","getElementById","queryClient","QueryClient","ReactDOM","render","QueryClientProvider","client"],"mappings":"mQAIe,SAASA,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAWC,aACf,kBACEC,MAAM,6CAA8C,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAU,CACnBC,OAAQ,EACRC,MAAOX,EACPY,WAAW,MAEZC,MAAK,SAACC,GAAD,OAASA,EAAIC,YACvB,CACEC,UADF,SACYC,GACRC,QAAQC,IAAI,YAAa,CAAEF,UAE7BG,QAJF,SAIUC,GACNH,QAAQC,IAAI,SAAU,CAAEE,WAE1BC,UAPF,WAQIJ,QAAQC,IAAI,0BAxBU,4CA6B5B,WAAuBI,GAAvB,SAAAC,EAAA,sDACED,EAAEE,iBACFvB,EAASwB,cAFX,4CA7B4B,sBAkC5B,OACE,sBAAKC,UAAU,MAAf,UACE,qDACA,+DACA,gDACA,uBAAMC,SAvCkB,4CAuCxB,UACE,uBACEC,KAAK,OACLC,MAAO9B,EACP+B,SAAU,SAACR,GAAD,OAAOtB,EAAQsB,EAAES,OAAOF,UAEpC,iDAED5B,EAAS+B,WAAa,kDACtB/B,EAASgC,WAAa,4CACtBhC,EAASiC,SAAW,uDChD3B,IAAMC,EAAcC,SAASC,eAAe,QACtCC,EAAc,IAAIC,IAExBC,IAASC,OACP,eAACC,EAAA,EAAD,CAAqBC,OAAQL,EAA7B,UACE,cAACzC,EAAD,IACA,cAAC,qBAAD,OAEFsC,K","file":"static/js/main.71e29c9b.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useMutation } from \"react-query\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [todo, setTodo] = useState(\"\");\n\n  const mutation = useMutation(\n    () =>\n      fetch(\"https://jsonplaceholder.typicode.com/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        body: JSON.stringify({\n          userId: 1,\n          title: todo,\n          completed: false\n        })\n      }).then((res) => res.json()),\n    {\n      onSuccess(data) {\n        console.log(\"Succesful\", { data });\n      },\n      onError(error) {\n        console.log(\"Failed\", { error });\n      },\n      onSettled() {\n        console.log(\"Mutation completed.\");\n      }\n    }\n  );\n\n  async function addTodo(e) {\n    e.preventDefault();\n    mutation.mutateAsync();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>useMutations() Hook</h1>\n      <h2>Create, update or delete data</h2>\n      <h3>Add a new todo</h3>\n      <form onSubmit={addTodo}>\n        <input\n          type=\"text\"\n          value={todo}\n          onChange={(e) => setTodo(e.target.value)}\n        />\n        <button>Add todo</button>\n      </form>\n      {mutation.isLoading && <p>Making request...</p>}\n      {mutation.isSuccess && <p>Todo added!</p>}\n      {mutation.isError && <p>There was an error!</p>}\n    </div>\n  );\n}\n","import { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <App />\n    <ReactQueryDevtools />\n  </QueryClientProvider>,\n  rootElement\n);\n"],"sourceRoot":""}